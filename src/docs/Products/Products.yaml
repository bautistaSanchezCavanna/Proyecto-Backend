paths:
  /api/products/:
    get: 
      tags:
        - Products
      summary: Get all Products from the DB
      responses:
        "200":
          description: Products fetched from the DB successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ProductsResponse'
        "500":
          description: Internal Server Error

    post:
      tags:
        - Products
      summary: Add a product to the DB
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/ProductPayload'
      responses:
        "200":
          description: Added Product
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ProductResponse'
        "400":
          description: Invalid Body format
        "500":
          description: Internal Server Error

  /api/products/{productId}:
    get:
      tags:
        - Products
      summary: Get a single product by their Id
      parameters:
        - name: productId
          in: path
          required: true
          description: Product Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Product from DB with given userId
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ProductResponse'
        "404":
          description: Product Not Found
        "500":
          description: Internal Server Error
    
    put:
      tags:
        - Products
      summary: Update a product by their Id
      parameters:
        - name: productId
          in: path
          required: true
          description: Product Id to fetch
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/ProductPayload'
      responses:
        "200":
          description: Updated product with the given productId
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ProductResponse'
        "400":
          description: Invalid Body format
        "404":
          description: Product Not Found
        "500":
          description: Internal Server Error

    delete:
      tags:
        - Products
      summary: Delete a single product by their Id
      parameters:
        - name: productId
          in: path
          required: true
          description: Product Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Deleted product with the given productId
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ProductResponse'
        "404":
          description: Product Not Found
        "500":
          description: Internal Server Error


components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Autogenerated MongoDB ID
        title:
          type: string
          description: Product's title
        description:
          type: string
          description: Product's description
        price: 
          type: number
          description: Product's price
        category:
          type: string
          description: Product's category
        code:
          type: string
          description: Product's code (Unique field)
        stock:
          type: number
          description: Product's stock
      example:
        _id: ObjectId (hdg23ki4j1vv1123j3o23)
        title: Shirt
        description: White shirt with long sleeves
        price: 32
        category: Clothing
        code: aa31lor
        stock: 29

    ProductsResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          description: Products response status
        payload:
          type: array
          description: Products array list
          items:
            $ref: '#components/schemas/Product'

    ProductResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          description: Product response status
        payload:
            $ref: '#components/schemas/Product'

  requestBodies:
    ProductPayload:
      type: object
      properties:
        title:
          type: string
          description: Product's title
        description:
          type: string
          description: Product's description
        price: 
          type: number
          description: Product's price
        category:
          type: string
          description: Product's category
        code:
          type: string
          description: Product's code (Unique field)
        stock:
          type: number
          description: Product's stock
      example:
        title: Cap
        description: Blue cap
        price: 13
        category: Accesories
        code: kmjduu22
        stock: 34
