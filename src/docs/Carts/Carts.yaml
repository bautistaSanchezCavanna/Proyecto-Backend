paths:
  /api/carts/:
    get:
      tags:
        - Carts
      summary: Get all carts from the DB
      responses:
        "200":
          description: Carts fetched from the DB successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

    post:
      tags:
        - Carts
      summary: Add a cart to the DB
      responses:
        "200":
          description: Cart added to the DB successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

  /api/carts/{cartId}:
    get:
      tags:
        - Carts
      summary: Get a single cart from the DB by their Id
      parameters:
        - name: cartId
          in: path
          required: true
          description: Cart Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Cart fetched from the DB successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "404":
          description: Cart Not Found
          content:
            application/json:
              schema:
                $ref: '#components/schemas/404ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

    delete:
      tags:
        - Carts
      summary: Delete a single cart from the DB by their Id
      parameters:
        - name: cartId
          in: path
          required: true
          description: Cart Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Cart deleted from the DB successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

  /api/carts/{cartId}/product/{productId}:
    post:
      tags:
        - Carts
      summary: Add a product from the DB by their Id to cart determined by their Id
      parameters:
        - name: cartId
          in: path
          required: true
          description: Cart Id to fetch
          schema:
            $type: string
        - name: productId
          in: path
          required: true
          description: product Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Product added to the cart successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "404":
          description: Cart/Product Not Found
          content:
            application/json:
              schema:
                $ref: '#components/schemas/404ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

    delete:
      tags:
        - Carts
      summary: Delete a product by their Id from a given cart from the DB by their Id
      parameters:
        - name: cartId
          in: path
          required: true
          description: Cart Id to fetch
          schema:
            $type: string
        - name: productId
          in: path
          required: true
          description: product Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Cart deleted from the DB successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "404":
          description: Cart/Product Not Found
          content:
            application/json:
              schema:
                $ref: '#components/schemas/404ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

  /api/carts/{cartId}/purchase:
    post:
      tags:
        - Carts
      summary: Purchase a given cart by their Id
      parameters:
        - name: cartId
          in: path
          required: true
          description: Cart Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Cart purchased successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "404":
          description: Cart Not Found
          content:
            application/json:
              schema:
                $ref: '#components/schemas/404ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

  /api/carts/{cartId}/clean:
    put:
      tags:
        - Carts
      summary: Clean a given cart by their Id
      parameters:
        - name: cartId
          in: path
          required: true
          description: Cart Id to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Cart cleaned successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/CartResponse'
        "404":
          description: Cart Not Found
          content:
            application/json:
              schema:
                $ref: '#components/schemas/404ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/500ErrorResponse'

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Autogenerated MongoDB ID
        products:
          description: Cart's products
          type: array
          items:
            type: object
            properties:
              product:
                type: ObjectId
                description: Autogenerated MongoDB ID referenced to an existing product in the DB
              quantity:
                type: number
                description: Product's quantity
      example:
        _id: ObjectId (abr432bvf256vtwy23)
        products:          
          product: ObjectId (hdg23ki4j1vv1123j3o23)
          quantity: 2

    CartsResponse:
          type: object
          properties:
            status:
              type: string
              enum: [success, error]
              description: Carts response status
            payload:
              type: array
              description: Carts array list
              items:
                $ref: '#components/schemas/Cart'
    
    CartResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          description: Cart response status
        payload:
            $ref: '#components/schemas/Cart'

    400ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
          description: Error response status
        payload:
          type: object
          properties:
            statusCode:
              enum: [400]
            error:
              enum: [Bad Request]

    404ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
          description: Error response status
        payload:
          type: object
          properties:
            statusCode:
              enum: [404]
            error:
              enum: [Not Found]

    500ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
          description: Error response status
        payload:
          type: object
          properties:
            statusCode:
              enum: [500]
            error:
              enum: [Internal Server Error]
